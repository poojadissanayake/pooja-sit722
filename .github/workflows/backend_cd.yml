name: CD - Deploy Backend Services to AKS (Staging)

on:
  push:
    branches:
      - testing
    paths:
      - 'k8s/**'
      - '.github/workflows/backend_cd.yml'

jobs:
  setup:
    uses: ./.github/workflows/deployment-setup.yml
    with:
      aks_cluster_name: ${{ secrets.AKS_CLUSTER_NAME }}
      aks_resource_group: ${{ secrets.AKS_RESOURCE_GROUP }}

  deploy_backend:
    runs-on: ubuntu-latest
    needs: setup
    environment: Staging
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy Backend Infrastructure (ConfigMaps, Secrets, Databases)
        run: |
          cd k8s/
          kubectl apply -f configmaps.yaml
          kubectl apply -f secrets.yaml
          kubectl apply -f product-db.yaml
          kubectl apply -f order-db.yaml
          kubectl apply -f customer-db.yaml

      - name: Deploy Backend Microservices (Product, Order, Customer)
        run: |
          cd k8s/
          kubectl apply -f product-service.yaml
          kubectl apply -f order-service.yaml
          kubectl apply -f customer-service.yaml

      - name: Wait for Backend LoadBalancer IPs
        run: |
          echo "Waiting for Product, Order, Customer LoadBalancer IPs..."
          PRODUCT_IP=""
          ORDER_IP=""
          CUSTOMER_IP=""
          for i in $(seq 1 60); do
            PRODUCT_IP=$(kubectl get service product-service-w08e1 -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            ORDER_IP=$(kubectl get service order-service-w08e1 -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            CUSTOMER_IP=$(kubectl get service customer-service-w08e1 -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [[ -n "$PRODUCT_IP" && -n "$ORDER_IP" && -n "$CUSTOMER_IP" ]]; then
              echo "All backend LoadBalancer IPs assigned"
              break
            fi
            sleep 5
          done
          if [[ -z "$PRODUCT_IP" || -z "$ORDER_IP" || -z "$CUSTOMER_IP" ]]; then
            echo "Timeout waiting for LoadBalancer IPs"
            exit 1
          fi
          echo "PRODUCT_IP=$PRODUCT_IP" >> $GITHUB_ENV
          echo "ORDER_IP=$ORDER_IP" >> $GITHUB_ENV
          echo "CUSTOMER_IP=$CUSTOMER_IP" >> $GITHUB_ENV