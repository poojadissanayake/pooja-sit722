name: CD - Staging (Deploy & Test)

on:
  workflow_run:
    workflows: ["Frontend CI - Build & Push Image"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy_staging:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'testing') }}
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set KUBECONFIG
        run: echo "KUBECONFIG=$RUNNER_TEMP/kubeconfig" >> $GITHUB_ENV

      - name: Get AKS context
        run: |
          az aks get-credentials -g "${{ vars.AKS_RESOURCE_GROUP }}" -n "${{ vars.AKS_CLUSTER_NAME }}" --overwrite-existing --file "$KUBECONFIG"
          kubectl --kubeconfig "$KUBECONFIG" cluster-info

      - name: Attach ACR to AKS (idempotent)
        run: az aks update -g "${{ vars.AKS_RESOURCE_GROUP }}" -n "${{ vars.AKS_CLUSTER_NAME }}" --attach-acr "${{ secrets.AZURE_CONTAINER_REGISTRY }}"

      - name: Get Storage Account Key
        id: sakey
        run: |
          KEY=$(az storage account keys list -g "${{ vars.AKS_RESOURCE_GROUP }}" -n "${{ secrets.STORAGE_ACCOUNT_NAME }}" --query "[0].value" -o tsv)
          if [ -z "$KEY" ]; then echo "No storage key found"; exit 1; fi
          echo "key=$KEY" >> $GITHUB_OUTPUT

      - name: Create/Update ecommerce-secret-w10t2 (adds AZURE_* keys)
        run: |
          NS=default
          kubectl --kubeconfig "$KUBECONFIG" -n "$NS" create secret generic ecommerce-secret-w10t2 \
            --from-literal=AZURE_STORAGE_ACCOUNT_NAME='${{ secrets.STORAGE_ACCOUNT_NAME }}' \
            --from-literal=AZURE_STORAGE_ACCOUNT_KEY='${{ steps.sakey.outputs.key }}' \
            --dry-run=client -o yaml | kubectl --kubeconfig "$KUBECONFIG" -n "$NS" apply -f -

      - name: Deploy Backend (reusable)
        id: backend
        uses: ./.github/workflows/backend_cd.yml
        with:
          aks_cluster_name: ${{ vars.AKS_CLUSTER_NAME }}
          aks_resource_group: ${{ vars.AKS_RESOURCE_GROUP }}

      - name: Quick acceptance checks
        run: |
          curl --fail "http://${{ steps.backend.outputs.PRODUCT_IP }}:8000/health"
          curl --fail "http://${{ steps.backend.outputs.ORDER_IP }}:8001/health"
          curl --fail "http://${{ steps.backend.outputs.CUSTOMER_IP }}:8002/health"

      - name: Deploy Frontend (reusable)
        uses: ./.github/workflows/frontend_cd.yml
        with:
          product_api_ip: "http://${{ steps.backend.outputs.PRODUCT_IP }}:8000"
          order_api_ip: "http://${{ steps.backend.outputs.ORDER_IP }}:8001"
          customer_api_ip: "http://${{ steps.backend.outputs.CUSTOMER_IP }}:8002"
          aks_cluster_name: ${{ vars.AKS_CLUSTER_NAME }}
          aks_resource_group: ${{ vars.AKS_RESOURCE_GROUP }}
